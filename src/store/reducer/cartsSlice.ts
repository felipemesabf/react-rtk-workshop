import {
  createEntityAdapter,
  createSelector,
  createSlice,
  EntityId,
  PayloadAction,
} from "@reduxjs/toolkit";

import { RootState } from "../store";
import apiSlice from "../api/apiSlice";

// Generated by https://quicktype.io

export interface CartState {
  id: number;
  userId: number;
  date: string;
  products: Product[];
  __v: number;
}

export interface Product {
  productId: number;
  quantity: number;
}

export interface Entities<T> {
  id: EntityId;
  data: T;
}

export type CartEntity = Entities<CartState | CartState[]>;

const cartAdapter = createEntityAdapter<CartEntity>({
  selectId: (cart) => cart.id,
});

const initialState = cartAdapter.getInitialState({});

const extendedAuthApi = apiSlice.injectEndpoints({
  endpoints: (builder) => ({
    getCarts: builder.query({
      query: () => ({
        url: "carts",
      }),
      transformResponse: (response: CartState[]): CartEntity => ({
        id: "carts",
        data: response,
      }),
    }),
    getCart: builder.query({
      query: (cartId: number) => ({
        url: `carts/${cartId}`,
        params: {},
      }),
      transformResponse: (response: CartState): CartEntity => ({
        id: "cart",
        data: response,
      }),
    }),
  }),
});

export const cartSlice = createSlice({
  name: "cart",
  initialState,
  reducers: {},
  extraReducers: (builder) => {
    builder.addMatcher(
      extendedAuthApi.endpoints.getCarts.matchFulfilled,
      (state, { payload }: PayloadAction<CartEntity>) => {
        cartAdapter.setOne(state, payload);
      }
    );
    builder.addMatcher(
      extendedAuthApi.endpoints.getCart.matchFulfilled,
      (state, { payload }: PayloadAction<CartEntity>) => {
        cartAdapter.setOne(state, payload);
      }
    );
  },
});

// Reducers
export const { useGetCartsQuery, useGetCartQuery } = extendedAuthApi;

// Selectors
const { selectById } = cartAdapter.getSelectors();

const cartState = (state: RootState) => state.cart;

export const selectCart = createSelector(cartState, (state) =>
  selectById(state, "cart")
);

export const selectCarts = createSelector(cartState, (state) =>
  selectById(state, "carts")
);
